name: SmokeTests

on:
  workflow_dispatch

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  CTEST_PARALLEL_LEVEL: 2

jobs:
  ####################
  # Linux / macOS
  ####################

  Unix:
    name: ${{ matrix.name }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11]
        config: [Debug, Release]
        include:
          - os: macos-11
            name: macOS
          - os: ubuntu-20.04
            name: Linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Checkout data
        uses: actions/checkout@v2
        with:
          repository: BrunoLevy/geogram.data
          path: tests/data

      - name: Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update
            sudo apt-get install \
              xorg-dev  \
              ccache

      - name: Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install ccache

      - name: Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' 

      - name: RobotFramework
        run: |
          pip3 install robotframework
          robot --version || true

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=1.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \

      - name: Build
        run: cd build; make -j2; ccache --show-stats

      - name: Tests
        run: |
          build/tests/runpybot.sh --include=smoke tests/

      - name: Publish tests results
        uses: actions/upload-artifact@v3
        with:
          name: Tests results
          path: |
            report.html
            log.html


  ####################
  # Windows
  ####################

  Windows:
    name: Windows (${{ matrix.config }})
    runs-on: windows-2022
    env:
      CC: cl.exe
      CXX: cl.exe
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Checkout data
        uses: actions/checkout@v2
        with:
          repository: BrunoLevy/geogram.data
          path: tests/data

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set env variable for sccache
        run: |
          echo "appdata=$env:LOCALAPPDATA" >> ${env:GITHUB_ENV}

      - name: Install robotframework
        run: |
          pip install robotframework

      - name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ${{ env.appdata }}\Mozilla\sccache
          key: ${{ runner.os }}-${{ matrix.config }}-cache

# Temporarily deactivated (fails with error)
#      - name: Prepare sccache
#        run: |
#          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
#          scoop install sccache --global 
#          # Scoop modifies the PATH so we make it available for the next steps of the job
#          echo "${env:PATH}" >> ${env:GITHUB_PATH}
# -> add this one to cmake flags in Configure step: -DCMAKE_CXX_COMPILER_LAUNCHER=sccache `

      - name: Configure
        run: |
          cmake -G Ninja `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_JOB_POOLS="pool-linking=1;pool-compilation=2" `
            -DCMAKE_JOB_POOL_COMPILE:STRING=pool-compilation `
            -DCMAKE_JOB_POOL_LINK:STRING=pool-linking `
            -B build `
            -S .

      - name: Build
        run: cmake --build build -j2

      - name: Tests
        run: |
          build/tests/runpybot.bat --config=${{ matrix.config }} --include=smoke tests/

      - name: Publish tests results
        uses: actions/upload-artifact@v3
        with:
          name: Tests results
          path: |
            report.html
            log.html

